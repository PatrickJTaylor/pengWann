name: CI

on: push

jobs:
  check:
    name: Lint, format and validate types
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.12
          enable-cache: true

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Lint Rust
        working-directory: rust
        run: cargo clippy

      - name: Check Rust formatting
        working-directory: rust
        run: cargo fmt --check

      - name: Lint Python
        run: uv run ruff check

      - name: Check Python formatting
        run: uv run ruff format --check

      - name: Validate Python types
        run: uv run pyright

  linux-t1:
    name: Build tier 1 Linux wheels
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.platform.target }}
          path: dist

  linux-t2-glibc:
    name: Build tier 2 Linux wheels (glibc)
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.platform.target }}
          path: dist

  linux-t2-musl:
    name: Build tier 2 Linux wheels (musl)
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-musl-${{ matrix.platform.target }}
          path: dist

  macos:
    name: Build MacOS wheels
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-latest
            target: aarch64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.platform.target }}
          path: dist

  windows-t1:
    name: Build Windows wheels
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.platform.target }}
          path: dist

  windows-t2:
    name: Build Windows wheels
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x86

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.platform.target }}
          path: dist

  test:
    name: Test tier 1 wheels
    needs: [linux-t1, macos, windows-t1]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: macos-latest
            target: x86_64
          - runner: macos-latest
            target: aarch64
          - runner: windows-latest
            target: x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.platform.target }}
          path: dist

      - name: Install wheel and test dependencies
        run: |
          uv venv
          uv pip install pengwann --find-links dist
          uv pip install pytest pytest-cov pytest-regressions pytest-random-order
          uv pip install pymatgen

      - name: Run test suite
        run: uv run --no-sync pytest

      - name: Publish test coverage
        if: ${{ (github.event_name == 'push') && (runner.os == 'Linux') && (matrix.python-version == 3.12) }}
        uses: paambaati/codeclimate-action@v9.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPO_TOKEN }}
